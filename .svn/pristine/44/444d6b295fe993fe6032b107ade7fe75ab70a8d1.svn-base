package com.youjing.yjeducation.ui.dispaly.activity;

import android.app.Dialog;
import android.content.BroadcastReceiver;
import android.content.Context;
import android.content.Intent;
import android.content.IntentFilter;
import android.os.Handler;
import android.os.Message;
import android.preference.PreferenceManager;
import android.text.TextUtils;
import android.util.Log;
import android.view.LayoutInflater;
import android.view.View;
import android.widget.AdapterView;
import android.widget.Button;
import android.widget.ImageView;
import android.widget.LinearLayout;
import android.widget.ListView;
import android.widget.RelativeLayout;
import android.widget.TextView;

import com.alibaba.fastjson.JSON;
import com.letv.universal.iplay.ISplayer;
import com.lidroid.xutils.BitmapUtils;
import com.loopj.android.http.RequestParams;
import com.loopj.android.http.TextHttpResponseHandler;
import com.tencent.connect.common.Constants;
import com.tencent.tauth.IUiListener;
import com.tencent.tauth.Tencent;
import com.tencent.tauth.UiError;
import com.youjing.yjeducation.R;
import com.youjing.yjeducation.core.YJBaseActivity;
import com.youjing.yjeducation.core.YJGlobal;
import com.youjing.yjeducation.core.YJNotifyTag;
import com.youjing.yjeducation.core.YJReqURLProtocol;
import com.youjing.yjeducation.core.YJStudentReqManager;
import com.youjing.yjeducation.core.YJTitleLayoutController;
import com.youjing.yjeducation.model.YJCourseListModel;
import com.youjing.yjeducation.model.YJCourseModel;
import com.youjing.yjeducation.model.YJGradeModel;
import com.youjing.yjeducation.model.YJSubjectModel;
import com.youjing.yjeducation.model.YJTeacherAskModel;
import com.youjing.yjeducation.talkfun.HttpRequest;
import com.youjing.yjeducation.talkfun.MainConsts;
import com.youjing.yjeducation.talkfun.YJLiveActivity;
import com.youjing.yjeducation.ui.actualize.activity.YJBuyCourseActivity;
import com.youjing.yjeducation.ui.actualize.activity.YJCourseListlActivity;
import com.youjing.yjeducation.ui.actualize.activity.YJLoginActivity;
import com.youjing.yjeducation.ui.actualize.activity.YJRechargeWhaleMoney;
import com.youjing.yjeducation.ui.actualize.activity.YJTeacherActivity;
import com.youjing.yjeducation.ui.actualize.dialog.YJIsReplayDialog;
import com.youjing.yjeducation.ui.actualize.dialog.YJLoginDialog;
import com.youjing.yjeducation.ui.actualize.dialog.YJLoginSuccessDialog;
import com.youjing.yjeducation.ui.actualize.dialog.YJShareDialog;
import com.youjing.yjeducation.ui.dispaly.dialog.AYJCourseExpiredDialog;
import com.youjing.yjeducation.util.ClickUtil;
import com.youjing.yjeducation.util.DialogUtil;
import com.youjing.yjeducation.util.MakeSign;
import com.youjing.yjeducation.util.SharedUtil;
import com.youjing.yjeducation.util.StringUtils;
import com.youjing.yjeducation.util.TimeUtil;
import com.youjing.yjeducation.wiget.CustomImage;

import org.apache.http.Header;
import org.json.JSONException;
import org.json.JSONObject;
import org.vwork.mobile.ui.AVAdapterItem;
import org.vwork.mobile.ui.adapter.VAdapter;
import org.vwork.mobile.ui.delegate.IVAdapterDelegate;
import org.vwork.mobile.ui.delegate.IVClickDelegate;
import org.vwork.mobile.ui.utils.VLayoutTag;
import org.vwork.mobile.ui.utils.VViewTag;
import org.vwork.utils.base.VParamKey;
import org.vwork.utils.base.VParams;
import org.vwork.utils.notification.IVNotificationListener;
import org.w3c.dom.Text;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;
import java.util.Timer;
import java.util.TimerTask;

/**
 * user  秦伟宁
 * Date 2016/3/29
 * Time 13:45
 */
@VLayoutTag(R.layout.activity_course_live_list)
public abstract class AYJCourseLiveListActivity extends YJBaseActivity implements IVClickDelegate, IVAdapterDelegate {
    @VViewTag(R.id.lv_course_live)
    private ListView mLv_course_live;
    @VViewTag(R.id.btn_apply)
    private Button mBtn_apply;
    @VViewTag(R.id.txt_name)
    private TextView txt_name;
    @VViewTag(R.id.txt_money)
    private TextView mTxt_money;
    @VViewTag(R.id.img_rmb)
    private ImageView mImg_rmb;
    protected Dialog progDialog;

    protected boolean mIsLogin;

    protected YJCourseModel mYjCourseModel;
    private LinearLayout mActivity_course_live_list_foot;
    private VAdapter adapter;
    private String TAG = "AYJCourseLiveListActivity";
    public static final VParamKey<YJCourseModel> YJ_COURSE_MODEL = new VParamKey<YJCourseModel>(null);
    private IUiListener qqShareListener;
    private Timer timer;
    private int mStatus = -1;
    private Handler mHandler = new Handler() {
        public void handleMessage(Message msg) {
            switch (msg.what) {
                case 4: {
                    AYJCourseExpiredDialog yjCourseExpiredDialog = new AYJCourseExpiredDialog();
                    VParams data = createTransmitData(AYJCourseExpiredDialog.TXT_INFO, "请续费后观看");
                    showDialog(yjCourseExpiredDialog, data);
                    break;
                }
                case 5: {
                    AYJCourseExpiredDialog yjCourseExpiredDialog = new AYJCourseExpiredDialog();
                    VParams data = createTransmitData(AYJCourseExpiredDialog.TXT_INFO, "请购买其他课程");
                    showDialog(yjCourseExpiredDialog);
                    break;
                }
                default:
                    break;
            }
        }
    };

    @Override
    protected void onLoadedView() {
        super.onLoadedView();
        YJTitleLayoutController.initTitleBuleBg(this, "直播课程详情", true);
        mYjCourseModel = getTransmitData(YJ_COURSE_MODEL);
        mIsLogin = PreferenceManager.getDefaultSharedPreferences(getContext()).getBoolean("isLogin", false);
        if(mYjCourseModel!= null){
            if (!TextUtils.isEmpty(mYjCourseModel.getIsScan()) && mYjCourseModel.getIsScan().equals("Yes") ){
                buyCourse();
            }
        }
        if (SharedUtil.getInteger(getContext(), "baseIndex", 0)!=-1){
            SharedUtil.setInteger(getContext(), "baseIndex", SharedUtil.getInteger(getContext(), "baseIndex", 0) + 1);
        }
        initData(1);
    }


    private void initData(final int position) {
        timer = new Timer();
        if (!TextUtils.isEmpty(mYjCourseModel.getCourseServiceStatus())) {
            if (mYjCourseModel.getCourseServiceStatus().equals("OVER")) {
                if (!TextUtils.isEmpty(mYjCourseModel.getCourseStatus())) {
                    if (mYjCourseModel.getCourseStatus().equals("SELLING")) {
                        timer.schedule(new TimerTask() {
                            public void run() {
                                mHandler.sendEmptyMessage(4);
                            }
                        }, 600);

                    } else {
                        timer.schedule(new TimerTask() {
                            public void run() {
                                mHandler.sendEmptyMessage(5);
                            }
                        }, 600);
                    }
                } else {
                    timer.schedule(new TimerTask() {
                        public void run() {
                            mHandler.sendEmptyMessage(5);
                        }
                    }, 600);
                }
            }
        } else {
        }

        qqShareListener = new IUiListener() {
            @Override
            public void onCancel() {
                notifyListener(YJNotifyTag.SHARE_SUCESS_INFO, "fail");
                showToast("分享取消");
            }

            @Override
            public void onComplete(Object response) {
                notifyListener(YJNotifyTag.SHARE_SUCESS_INFO, "sucess");
                //showToast(getString(R.string.share_success));
            }

            @Override
            public void onError(UiError e) {
                notifyListener(YJNotifyTag.SHARE_SUCESS_INFO, "fail");
                showToast(getString(R.string.share_fail));
            }
        };

        mIsLogin = PreferenceManager.getDefaultSharedPreferences(getContext()).getBoolean("isLogin", false);
        if (mYjCourseModel != null) {
            YJGlobal.setYjCourseModel(mYjCourseModel);
            Log.d(TAG, "mYjCourseModel=" + mYjCourseModel);
            if (mIsLogin) {
                if (!TextUtils.isEmpty(mYjCourseModel.getCourseServiceStatus()) && mYjCourseModel.getCourseServiceStatus().equals("OVER")) {
                    if (!TextUtils.isEmpty(mYjCourseModel.getCourseStatus()) && mYjCourseModel.getCourseStatus().equals("SELLING")) {
                        Log.d(TAG, "SELLING");
                        if (mYjCourseModel.getCoursePayWay().equals("FREE")) {
                            mBtn_apply.setVisibility(View.GONE);
                            mImg_rmb.setVisibility(View.GONE);
                            mTxt_money.setVisibility(View.GONE);
                        } else if (mYjCourseModel.getIsBuy().equals("Yes")) {
                            mBtn_apply.setVisibility(View.GONE);
                            mImg_rmb.setVisibility(View.GONE);
                            mTxt_money.setVisibility(View.GONE);
                        } else if (mYjCourseModel.getIsBuy().equals("No")) {
                            mBtn_apply.setVisibility(View.VISIBLE);
                            mTxt_money.setVisibility(View.VISIBLE);
                            if (mYjCourseModel.getCoursePayWay().equals("XNB")) {
                                mImg_rmb.setVisibility(View.VISIBLE);
                                mTxt_money.setText(mYjCourseModel.getPayCoin() + "");
                            } else if (mYjCourseModel.getCoursePayWay().equals("RMB")) {
                                mImg_rmb.setVisibility(View.GONE);
                                mTxt_money.setText("￥ " + mYjCourseModel.getPayMoney());
                            }
                        }
                    } else {
                        mBtn_apply.setVisibility(View.VISIBLE);
                        mBtn_apply.setBackgroundColor(getResources().getColor(R.color.gray_text));
                        mBtn_apply.setTextColor(getResources().getColor(R.color.black));
                    }
                } else if (!TextUtils.isEmpty(mYjCourseModel.getCourseServiceStatus()) && mYjCourseModel.getCourseServiceStatus().equals("IN_STUDY")) {
                    Log.d(TAG, "IN_STUDY");
                    if (mYjCourseModel.getCoursePayWay().equals("FREE")) {
                        mBtn_apply.setVisibility(View.GONE);
                        mImg_rmb.setVisibility(View.GONE);
                        mTxt_money.setVisibility(View.GONE);
                    } else if (mYjCourseModel.getIsBuy().equals("Yes")) {
                        mBtn_apply.setVisibility(View.GONE);
                        mImg_rmb.setVisibility(View.GONE);
                        mTxt_money.setVisibility(View.GONE);
                    } else if (mYjCourseModel.getIsBuy().equals("No")) {
                        mBtn_apply.setVisibility(View.VISIBLE);
                        mTxt_money.setVisibility(View.VISIBLE);
                        if (mYjCourseModel.getCoursePayWay().equals("XNB")) {
                            mImg_rmb.setVisibility(View.VISIBLE);
                            mTxt_money.setText(mYjCourseModel.getPayCoin() + "");
                            Log.d(TAG, "mYjCourseModel.getPayCoin()+" + mYjCourseModel.getPayCoin());
                        } else if (mYjCourseModel.getCoursePayWay().equals("RMB")) {
                            mImg_rmb.setVisibility(View.GONE);
                            mTxt_money.setText("￥ " + mYjCourseModel.getPayMoney());
                        }
                    }
                } else {
                    Log.d(TAG, "mYjCourseModel.getPayCoin()");
                    if (mYjCourseModel.getCoursePayWay().equals("FREE")) {
                        mBtn_apply.setVisibility(View.GONE);
                        mImg_rmb.setVisibility(View.GONE);
                        mTxt_money.setVisibility(View.GONE);
                    } else if (mYjCourseModel.getIsBuy().equals("Yes")) {
                        mBtn_apply.setVisibility(View.GONE);
                        mImg_rmb.setVisibility(View.GONE);
                        mTxt_money.setVisibility(View.GONE);
                    } else if (mYjCourseModel.getIsBuy().equals("No")) {
                        mBtn_apply.setVisibility(View.VISIBLE);
                        mTxt_money.setVisibility(View.VISIBLE);
                        if (mYjCourseModel.getCoursePayWay().equals("XNB")) {
                            mImg_rmb.setVisibility(View.VISIBLE);
                            mTxt_money.setText(mYjCourseModel.getPayCoin() + "");
                            Log.d(TAG, "mYjCourseModel.getPayCoin()+" + mYjCourseModel.getPayCoin());
                        } else if (mYjCourseModel.getCoursePayWay().equals("RMB")) {
                            mImg_rmb.setVisibility(View.GONE);
                            mTxt_money.setText("￥ " + mYjCourseModel.getPayMoney());
                        }
                    }
                }
            }else {
                Log.d(TAG, "mYjCourseModel.getPayCoin()");
                if (mYjCourseModel.getCoursePayWay().equals("FREE")) {
                    mBtn_apply.setVisibility(View.GONE);
                    mImg_rmb.setVisibility(View.GONE);
                    mTxt_money.setVisibility(View.GONE);
                } else if (mYjCourseModel.getIsBuy().equals("Yes")) {
                    mBtn_apply.setVisibility(View.GONE);
                    mImg_rmb.setVisibility(View.GONE);
                    mTxt_money.setVisibility(View.GONE);
                } else if (mYjCourseModel.getIsBuy().equals("No")) {
                    mBtn_apply.setVisibility(View.VISIBLE);
                    mTxt_money.setVisibility(View.VISIBLE);
                    if (mYjCourseModel.getCoursePayWay().equals("XNB")) {
                        mImg_rmb.setVisibility(View.VISIBLE);
                        mTxt_money.setText(mYjCourseModel.getPayCoin() + "");
                        Log.d(TAG, "mYjCourseModel.getPayCoin()+" + mYjCourseModel.getPayCoin());
                    } else if (mYjCourseModel.getCoursePayWay().equals("RMB")) {
                        mImg_rmb.setVisibility(View.GONE);
                        mTxt_money.setText("￥ " + mYjCourseModel.getPayMoney());
                    }
                }
            }
            txt_name.setText(mYjCourseModel.getName() + "(" + mYjCourseModel.getCourseCatalogList().size() + ")");

            LayoutInflater inflater = (LayoutInflater) getContext().getSystemService(Context.LAYOUT_INFLATER_SERVICE);
            mActivity_course_live_list_foot = (LinearLayout) inflater.inflate(R.layout.activity_course_live_list_foot, null);

            TextView txt_teacher_name = (TextView) mActivity_course_live_list_foot.findViewById(R.id.txt_teacher_name);
            CustomImage img_teacher_photo = (CustomImage) mActivity_course_live_list_foot.findViewById(R.id.img_teacher_photo);
            TextView txt_play_num = (TextView) mActivity_course_live_list_foot.findViewById(R.id.txt_play_num);
            Button bt_enter_group = (Button) mActivity_course_live_list_foot.findViewById(R.id.bt_enter_group);
            RelativeLayout re_teacher_info = (RelativeLayout) mActivity_course_live_list_foot.findViewById(R.id.re_teacher_info);
            TextView txt_online_status = (TextView) mActivity_course_live_list_foot.findViewById(R.id.txt_online_status);
            if (position == 1) {
                mLv_course_live.addFooterView(mActivity_course_live_list_foot);
            }
            if (mYjCourseModel != null) {
                txt_teacher_name.setText(mYjCourseModel.getTeacher().getTrueName());
                BitmapUtils.create(getContext()).display(img_teacher_photo, mYjCourseModel.getTeacher().getTeacherPic());
                if (!TextUtils.isEmpty(mYjCourseModel.getTeacher().getCourseCount())) {
                    txt_play_num.setText("学生数：" + mYjCourseModel.getTeacher().getCourseCount());
                } else {
                    txt_play_num.setText("学生数：" + 0);
                }
                if (!TextUtils.isEmpty(mYjCourseModel.getTeacher().getIsOnline()) && mYjCourseModel.getTeacher().getIsOnline().equals("Yes")) {
                    txt_online_status.setText("在线");
                    bt_enter_group.setTextColor(getResources().getColor(R.color.white));
                    bt_enter_group.setBackgroundResource(R.mipmap.img_btn_bule_bg);
                    txt_online_status.setTextColor(getResources().getColor(R.color.white));
                    txt_online_status.setBackgroundResource(R.mipmap.img_yellow_bg);
                } else if (!TextUtils.isEmpty(mYjCourseModel.getTeacher().getIsOnline()) && mYjCourseModel.getTeacher().getIsOnline().equals("No")) {
                    txt_online_status.setText("离线");
                    bt_enter_group.setTextColor(getResources().getColor(R.color.gray_text));
                    bt_enter_group.setBackgroundResource(R.mipmap.img_btn_gray_bg);
                    txt_online_status.setTextColor(getResources().getColor(R.color.gray_text));
                    txt_online_status.setBackgroundResource(R.mipmap.img_on_status_no);
                }

            }
            bt_enter_group.setOnClickListener(new View.OnClickListener() {
                @Override
                public void onClick(View view) {
                    if (ClickUtil.isFastDoubleClick()) {
                        return;
                    }
                    StringUtils.setGradeAndSubject(getContext(), mYjCourseModel);
                    getTeacherList(YJGlobal.getGradeList().get(PreferenceManager.getDefaultSharedPreferences(getContext()).getInt("gradeNum", 0)).getGradeId(), YJGlobal.getGradeList().get(PreferenceManager.getDefaultSharedPreferences(getContext()).getInt("gradeNum", 0)).getSubjectVos().get(PreferenceManager.getDefaultSharedPreferences(getContext()).getInt("subjectNum", 0)).getSubjectId());
                    finishTo(AYJMainActivity.class);
                    notifyListener(YJNotifyTag.MAIN_QUESTION, 1);
                }
            });
            re_teacher_info.setOnClickListener(new View.OnClickListener() {
                @Override
                public void onClick(View view) {
                    if (ClickUtil.isFastDoubleClick()) {
                        return;
                    }
                    StringUtils.setGradeAndSubject(getContext(), mYjCourseModel);
                    getTeacherList(YJGlobal.getGradeList().get(PreferenceManager.getDefaultSharedPreferences(getContext()).getInt("gradeNum", 0)).getGradeId(), YJGlobal.getGradeList().get(PreferenceManager.getDefaultSharedPreferences(getContext()).getInt("gradeNum", 0)).getSubjectVos().get(PreferenceManager.getDefaultSharedPreferences(getContext()).getInt("subjectNum", 0)).getSubjectId());
                    finishTo(AYJMainActivity.class);
                    notifyListener(YJNotifyTag.MAIN_QUESTION, 1);
                }
            });


            bindNotifyListener();
            if (adapter == null) {
                adapter = new VAdapter(this, mLv_course_live);
            } else {
                adapter.notifyDataSetChanged();
            }
            mLv_course_live.setAdapter(adapter);
            mLv_course_live.setOnItemClickListener(new AdapterView.OnItemClickListener() {
                @Override
                public void onItemClick(AdapterView<?> adapterView, View view, int i, long l) {
                    if (ClickUtil.isFastDoubleClick()) {
                        return;
                    }
                    Log.d(TAG, "i=" + i);
                    if (mIsLogin) {
                        if (mYjCourseModel != null) {
                            if (!TextUtils.isEmpty(mYjCourseModel.getCourseServiceStatus()) && mYjCourseModel.getCourseServiceStatus().equals("OVER")) {
                                if (!TextUtils.isEmpty(mYjCourseModel.getCourseStatus()) && mYjCourseModel.getCourseStatus().equals("SELLING")) {
                                    if (mYjCourseModel.getCoursePayWay().equals("XNB")) {
                                        if (Integer.parseInt(YJGlobal.getYjUser().getCoin()) >= mYjCourseModel.getPayCoin()) {
                                            startActivity(createIntent(YJBuyCourseActivity.class, createTransmitData(YJBuyCourseActivity.COURSE_MODEL, mYjCourseModel).set(YJBuyCourseActivity.VISIBLE_FLAG, true)));
                                        } else {
                                            startActivity(createIntent(YJRechargeWhaleMoney.class, createTransmitData(YJRechargeWhaleMoney.COURSE_MODEL, mYjCourseModel).set(YJRechargeWhaleMoney.VISIBLE_FLAG, true)));
                                        }
                                    } else if (mYjCourseModel.getCoursePayWay().equals("RMB")) {
                                        startActivity(createIntent(YJBuyCourseActivity.class, createTransmitData(YJBuyCourseActivity.COURSE_MODEL, mYjCourseModel).set(YJBuyCourseActivity.VISIBLE_FLAG, true)));
                                    }
                                }

                            } else {
                                if (!TextUtils.isEmpty(mYjCourseModel.getCourseStatus()) && mYjCourseModel.getCourseStatus().equals("SELLING")) {

                                    if (mYjCourseModel.getCoursePayWay().equals("FREE") || mYjCourseModel.getIsBuy().equals("Yes")) {

                                        if (mYjCourseModel.getCourseCatalogList().get(i).getLiveStatus().equals("ing")) {
                                            progDialog = DialogUtil.showWaitDialog(getContext());//加载数据的loading 先注释掉 用的时候换样式

                                            getTakenLive(i, false,1);
                                        }
                                        if (mYjCourseModel.getCourseCatalogList().get(i).getLiveStatus().equals("over")) {
                                            if ("Yes".equals(mYjCourseModel.getCourseCatalogList().get(i).getIsReplay())) {
                                                progDialog = DialogUtil.showWaitDialog(getContext());//加载数据的loading 先注释掉 用的时候换样式
                                                getTakenBack(i);
                                            }
                                            if ("No".equals(mYjCourseModel.getCourseCatalogList().get(i).getIsReplay())) {
//                                                showDialog(new YJIsReplayDialog());
                                                getTakenLive(i, true,2);
                                            }
                                        }
                                        if (mYjCourseModel.getCourseCatalogList().get(i).getLiveStatus().equals("no")) {
//                                            showToast("直播未开始");
                                            getTakenLive(i, true,1);
                                        }
                                    } else {
                                        if (mYjCourseModel.getCoursePayWay().equals("XNB")) {
                                            if (Integer.parseInt(YJGlobal.getYjUser().getCoin()) >= mYjCourseModel.getPayCoin()) {
                                                startActivity(createIntent(YJBuyCourseActivity.class, createTransmitData(YJBuyCourseActivity.COURSE_MODEL, mYjCourseModel).set(YJBuyCourseActivity.VISIBLE_FLAG, true)));
                                            } else {
                                                startActivity(createIntent(YJRechargeWhaleMoney.class, createTransmitData(YJRechargeWhaleMoney.COURSE_MODEL, mYjCourseModel).set(YJRechargeWhaleMoney.VISIBLE_FLAG, true)));
                                            }
                                        } else if (mYjCourseModel.getCoursePayWay().equals("RMB")) {
                                            startActivity(createIntent(YJBuyCourseActivity.class, createTransmitData(YJBuyCourseActivity.COURSE_MODEL, mYjCourseModel).set(YJBuyCourseActivity.VISIBLE_FLAG, true)));
                                        }
                                    }
                                }
                            }
                        }
                    } else {
                   /* YJLoginDialog dialog = new YJLoginDialog();
                    showDialog(dialog);*/
                        startActivity(YJLoginDialog.class);
                    }
                }
            });
        }

    }

    private void bindNotifyListener() {
        addListener(YJNotifyTag.USER_LOGIN, new IVNotificationListener() {
            @Override
            public void onNotify(String s, Object value) {
                mIsLogin = PreferenceManager.getDefaultSharedPreferences(getContext()).getBoolean("isLogin", false);
                getCourseCatalog(1);

            }
        });

        addListener(YJNotifyTag.PAY_SUCESS, new IVNotificationListener() {
            @Override
            public void onNotify(String s, Object value) {
                mIsLogin = PreferenceManager.getDefaultSharedPreferences(getContext()).getBoolean("isLogin", false);
                getCourseCatalog(2);


            }
        });
        addListener(YJNotifyTag.COURSE_CLOSE, new IVNotificationListener() {
            @Override
            public void onNotify(String s, Object value) {
                boolean colseFlag = (boolean) value;
                if (colseFlag) {
                    finish();
                }
            }
        });
    }

    @Override
    protected void onActivityResult(int requestCode, int resultCode, Intent data) {
        if (requestCode == Constants.REQUEST_QQ_SHARE) {
            if (resultCode == Constants.ACTIVITY_OK) {
                Tencent.handleResultData(data, qqShareListener);
            }
        }
    }

    private void buyCourse(){
        if (mYjCourseModel != null) {
            if (mIsLogin) {
                if (mYjCourseModel.getCoursePayWay().equals("XNB")) {
                    if (Integer.parseInt(YJGlobal.getYjUser().getCoin()) >= mYjCourseModel.getPayCoin()) {
                        startActivity(createIntent(YJBuyCourseActivity.class, createTransmitData(YJBuyCourseActivity.COURSE_MODEL, mYjCourseModel).set(YJBuyCourseActivity.VISIBLE_FLAG, true)));
                    } else {
                        startActivity(createIntent(YJRechargeWhaleMoney.class, createTransmitData(YJRechargeWhaleMoney.COURSE_MODEL, mYjCourseModel).set(YJRechargeWhaleMoney.VISIBLE_FLAG, true)));
                    }
                } else if (mYjCourseModel.getCoursePayWay().equals("RMB")) {
                    startActivity(createIntent(YJBuyCourseActivity.class, createTransmitData(YJBuyCourseActivity.COURSE_MODEL, mYjCourseModel).set(YJBuyCourseActivity.VISIBLE_FLAG, true)));
                }
            } else {
                   /* YJLoginDialog dialog = new YJLoginDialog();

                    showDialog(dialog);*/
                mStatus = 0;
                startActivity(YJLoginDialog.class);
            }
        }
    }
    @Override
    public void onClick(View view) {
        if (view == mBtn_apply) {
            if (ClickUtil.isFastDoubleClick()) {
                return;
            }
            buyCourse();
        }
    }

    @Override
    public AVAdapterItem createAdapterItem(View view, int i, int i1) {
        return new YJCourseLiveListItem();
    }

    @Override
    public int getAdapterItemCount(View view) {
        if (mYjCourseModel != null) {
            return mYjCourseModel.getCourseCatalogList().size();
        } else {
            return 0;
        }

    }

    @VLayoutTag(R.layout.activity_course_live_item)
    class YJCourseLiveListItem extends AVAdapterItem {
        @VViewTag(R.id.img_but_status)
        private ImageView img_but_status;
        @VViewTag(R.id.txt_status_live)
        private TextView txt_status_live;
        @VViewTag(R.id.txt_title_name)
        private TextView txt_title_name;
        @VViewTag(R.id.txt_user_num)
        private TextView txt_user_num;
        @VViewTag(R.id.txt_date)
        private TextView txt_date;
        @VViewTag(R.id.txt_time)
        private TextView txt_time;
        @VViewTag(R.id.txt_enter)
        private TextView txt_enter;
        @VViewTag(R.id.txt_share)
        private TextView txt_share;
        @VViewTag(R.id.img_people_num)
        private ImageView img_people_num;
        @VViewTag(R.id.view_line)
        private View view_line;


        @Override
        public void update(int position) {
            if (position == 0) {
                view_line.setVisibility(View.INVISIBLE);
            } else {
                view_line.setVisibility(View.VISIBLE);
            }
            super.update(position);
            if (mYjCourseModel != null) {
                txt_title_name.setText(mYjCourseModel.getCourseCatalogList().get(position).getName());

                String planDate = TimeUtil.getYearTime(Long.parseLong(mYjCourseModel.getCourseCatalogList().get(position).getPlanDate()));
                String planEndDate = TimeUtil.getSecondMInTime(Long.parseLong(mYjCourseModel.getCourseCatalogList().get(position).getPlanEndDate()));
                txt_date.setText((("3".equals(StringUtils.getDateDetail(planDate)) ? TimeUtil.getMonthTime(Long.parseLong(mYjCourseModel.getCourseCatalogList().get(position).getPlanDate())) : StringUtils.getDateDetail(planDate)) + " " + TimeUtil.getSecondMInTime(Long.parseLong(mYjCourseModel.getCourseCatalogList().get(position).getPlanDate()))) + "-" + planEndDate);

                if (!TextUtils.isEmpty(mYjCourseModel.getCourseCatalogList().get(position).getLookStudent())) {
                    txt_user_num.setText(mYjCourseModel.getCourseCatalogList().get(position).getLookStudent());
                } else {
                    txt_user_num.setText("0");
                }

                if (mYjCourseModel.getCourseCatalogList().get(position).getLiveStatus().equals("ing")) {
                    txt_status_live.setText(R.string.live_ing_title);
                    txt_enter.setVisibility(View.VISIBLE);
                    txt_date.setTextColor(getResources().getColor(R.color.yellow_text));
                    txt_title_name.setTextColor(getResources().getColor(R.color.black));
                    img_but_status.setImageResource(R.mipmap.img_but_live);
                    txt_status_live.setTextColor(getResources().getColor(R.color.yellow_text));
                    txt_user_num.setVisibility(View.VISIBLE);
                    img_people_num.setVisibility(View.VISIBLE);
                } else if (mYjCourseModel.getCourseCatalogList().get(position).getLiveStatus().equals("over")) {
                    txt_status_live.setTextColor(getResources().getColor(R.color.gray_text));
                    txt_date.setTextColor(getResources().getColor(R.color.gray_text));
                    txt_title_name.setTextColor(getResources().getColor(R.color.gray_text));
                    txt_status_live.setText("已结束");
                    txt_enter.setVisibility(View.VISIBLE);

                    if ("Yes".equals(mYjCourseModel.getCourseCatalogList().get(position).getIsReplay())) {
                        txt_enter.setText("看回放");
                        txt_enter.setTextColor(getResources().getColor(R.color.blue_title));
                    }
                    if ("No".equals(mYjCourseModel.getCourseCatalogList().get(position).getIsReplay())) {
                        txt_enter.setText("回放剪辑中");
                        txt_enter.setTextColor(getResources().getColor(R.color.gray_text));
                    }

                    txt_user_num.setVisibility(View.VISIBLE);
                    img_people_num.setVisibility(View.VISIBLE);
                    img_but_status.setImageResource(R.mipmap.img_but_end);
                } else if (mYjCourseModel.getCourseCatalogList().get(position).getLiveStatus().equals("no")) {
                    txt_status_live.setTextColor(getResources().getColor(R.color.black));
                    txt_date.setTextColor(getResources().getColor(R.color.yellow_text));
                    txt_title_name.setTextColor(getResources().getColor(R.color.black));
                    txt_status_live.setText("未开始");
                    txt_enter.setVisibility(View.GONE);
                    txt_user_num.setVisibility(View.GONE);
                    img_people_num.setVisibility(View.GONE);
                    img_but_status.setImageResource(R.mipmap.img_but_no_start);
                }
                txt_share.setOnClickListener(new View.OnClickListener() {
                    @Override
                    public void onClick(View view) {
                        YJShareDialog yjShareDialog = new YJShareDialog();
                        showDialog(yjShareDialog);
                    }
                });
            }


        }
    }

    //重新获取课程详情页
    private void getCourseCatalog(final int position) {
        Map<String, Object> objectMap = new HashMap<>();
        try {
            objectMap.put("courseId", mYjCourseModel.getCourseId());

        } catch (Exception e) {
            e.printStackTrace();
        }
        YJStudentReqManager.getServerData(YJReqURLProtocol.GET_COURSE_CATALOG, objectMap, mIsLogin, new TextHttpResponseHandler() {
            @Override
            public void onFailure(int i, Header[] headers, String s, Throwable throwable) {
                Log.d(TAG, "失败=" + s);
                showToast(getString(R.string.no_net_work));
            }

            @Override
            public void onSuccess(int i, Header[] headers, String s) {
                try {
                    Log.d(TAG, "成功s=" + s);
                    JSONObject json = null;
                    json = new JSONObject(s);
                    switch (json.getInt("code")) {
                        case 200:
                            JSONObject jsonObject = new JSONObject(json.getString("data"));
                            YJCourseModel yjCourseModel = JSON.parseObject(jsonObject.getString("course"), YJCourseModel.class);
                            Log.d(TAG, "yjCourseModel=" + yjCourseModel.toString());
                            mYjCourseModel = yjCourseModel;
                            initData(2);
                            if (position == 1) {
                                if (mStatus == 0) {
                                    if (mYjCourseModel.getIsBuy().equals("Yes")) {
                                        return;
                                    }
                                    if (mYjCourseModel.getIsBuy().equals("No")) {
                                        if (mYjCourseModel.getCoursePayWay().equals("XNB")) {
                                            if (Integer.parseInt(YJGlobal.getYjUser().getCoin()) <= mYjCourseModel.getPayCoin()) {
                                                startActivity(createIntent(YJBuyCourseActivity.class, createTransmitData(YJBuyCourseActivity.COURSE_MODEL, mYjCourseModel).set(YJBuyCourseActivity.VISIBLE_FLAG, true)));
                                            } else {
                                                startActivity(createIntent(YJRechargeWhaleMoney.class, createTransmitData(YJRechargeWhaleMoney.COURSE_MODEL, mYjCourseModel).set(YJRechargeWhaleMoney.VISIBLE_FLAG, true)));
                                            }
                                        } else if (mYjCourseModel.getCoursePayWay().equals("RMB")) {
                                            startActivity(createIntent(YJBuyCourseActivity.class, createTransmitData(YJBuyCourseActivity.COURSE_MODEL, mYjCourseModel).set(YJBuyCourseActivity.VISIBLE_FLAG, true)));
                                        }
                                    }
                                } else {

                                }
                            }
                            break;
                        case 300:
                            break;
                        case 400:
                            break;
                        case 401:
                            break;
                        case 402:
                            break;
                        case 500:
                            break;
                        case 600:
                            startActivity(createIntent(YJLoginActivity.class, createTransmitData(YJLoginActivity.LOGIN_OUT, 1).set(YJLoginActivity.MY_LOGIN_OUT, true)));
                            finishAll();
                            break;
                        default:
                            break;
                    }

                } catch (JSONException e) {
                    e.printStackTrace();
                }
            }
        });
    }


    private void startLive() {
        if (!MainConsts.isConnected()) {
            showToast(getString(R.string.not_connect));
            return;
        }
        String name = "1111";
        String key = "test-qifei";
        String url = MainConsts.getLiveLogInUrl(name, key);
        Log.i(TAG, "url:" + url);

        HttpRequest request = new HttpRequest();
        request.setRequestListener(new HttpRequest.IHttpRequestListener() {
            @Override
            public void onRequestCompleted(String responseStr) {
                // TODO Auto-generated method stub
                parseJson(responseStr);
            }

            @Override
            public void onIOError(String errorStr) {
                showToast("网络错误");
            }
        });
        request.sendRequestWithGET(url);
    }

    /**
     * 解析服务器返回结果
     *
     * @param strResult
     */
    private int mode = 2;

    private void parseJson(String strResult) {
        try {
            JSONObject jsonObj = new JSONObject(strResult);
            if (jsonObj.getInt("code") == 0) {
                JSONObject dataObj = jsonObj.getJSONObject("data");
                String token = dataObj.getString("access_token");

                Log.d("token", "token=" + token);
                if (token != null) {
                    Intent intent = new Intent();
                    intent.setClass(this, YJLiveActivity.class);
                    intent.putExtra("token", token);
                    intent.putExtra("isPlayback", false);
                    intent.putExtra("mode", mode);
                    startActivity(intent);
                }
            } else {
                showToast("请检查密匙是否正确");
            }

        } catch (Exception e) {
            // TODO: handle exception
        }
    }


    public abstract void getTakenLive(int position, boolean isShowDialog,int isLiveType);

    public abstract void getTakenBack(int position);

    public abstract void getTeacherList(String gradeId, String subjectId);


}
