package com.youjing.yjeducation.ui.dispaly.activity;

import android.content.Context;
import android.content.Intent;
import android.net.Uri;
import android.util.Log;
import android.view.MotionEvent;
import android.view.View;
import android.view.inputmethod.InputMethodManager;
import android.widget.Button;
import android.widget.EditText;
import android.widget.RelativeLayout;
import android.widget.TextView;
import android.widget.Toast;

import com.loopj.android.http.RequestParams;
import com.loopj.android.http.TextHttpResponseHandler;
import com.youjing.yjeducation.R;
import com.youjing.yjeducation.core.YJBaseActivity;
import com.youjing.yjeducation.core.YJGlobal;
import com.youjing.yjeducation.core.YJReqURLProtocol;
import com.youjing.yjeducation.core.YJStudentReqManager;
import com.youjing.yjeducation.core.YJTitleLayoutController;
import com.youjing.yjeducation.ui.actualize.activity.YJActivateGiftCard;
import com.youjing.yjeducation.util.CheckPhone;
import com.youjing.yjeducation.util.MakeSign;
import com.youjing.yjeducation.wiget.CustomToast;

import org.apache.http.Header;
import org.json.JSONException;
import org.json.JSONObject;
import org.vwork.mobile.ui.delegate.IVClickDelegate;
import org.vwork.mobile.ui.utils.VLayoutTag;
import org.vwork.mobile.ui.utils.VViewTag;

import java.util.HashMap;
import java.util.Map;

/**
 * user  秦伟宁
 * Date 2016/3/17
 * Time 19:41
 */
@VLayoutTag(R.layout.activity_forget_password)
public abstract class AYJForgetPasswordActivity extends YJBaseActivity implements IVClickDelegate{
    @VViewTag(R.id.edt_account)
    private EditText mEdt_account;
    @VViewTag(R.id.edt_password)
    private EditText mEdt_password;
    @VViewTag(R.id.edt_security_code)
    private EditText mEdt_security_code;
    @VViewTag(R.id.bt_get_security_code)
    private Button mBt_get_security_code;
    @VViewTag(R.id.btn_regist_next)
    private Button mBtn_regist_next;
    @VViewTag(R.id.txt_wechat_login)
    private TextView mTxt_wechat_login;
    @VViewTag(R.id.txt_qq_login)
    private TextView mTxt_qq_login;
    @VViewTag(R.id.txt_sina_login)
    private TextView mTxt_sina_login;
    @VViewTag(R.id.re_tel)
    private RelativeLayout re_tel;


    private String TAG = "YJForgetPasswordActivity";


    private int mResidueSecond = 120;
    private String mStrVerification;
    Runnable mRunnable = new Runnable() {
        @Override
        public void run() {
            if (mResidueSecond > 1) {
                mResidueSecond--;
                mBt_get_security_code.setText(mResidueSecond + getString(R.string.second)+"重新获取");
                mBt_get_security_code.setEnabled(false);
                postRunnable(this, 1000);
            } else if (mResidueSecond == 1) {
                onRecovery();
            }
        }
    };
    @Override
    protected void onLoadedView() {
        YJTitleLayoutController.initTitleBuleBg(this, "忘记密码", true);

    }

    @Override
    public void onClick(View view) {
        if (view == mBt_get_security_code){
            String phone = mEdt_account.getText().toString().trim();
            if (!CheckPhone.isMobileNum(phone)) {
                CustomToast.makeText(getContext(), getString(R.string.txt_phone), Toast.LENGTH_SHORT).show();
                return;
            } else {
                getVerification(phone);
            }
        }else if(view ==mBtn_regist_next){

//            startActivity(YJActivateGiftCard.class);

            String phone = mEdt_account.getText().toString().trim();
            String mPassword = mEdt_password.getText().toString().trim();
            String mScurity= mEdt_security_code.getText().toString().trim();
            if (!CheckPhone.isMobileNum(phone)) {
                CustomToast.makeText(getContext(), getString(R.string.txt_phone), Toast.LENGTH_SHORT).show();
                return;
            }
            register(phone, mPassword,mScurity);
        }else if(view == re_tel){
            Intent intent=new Intent(Intent.ACTION_DIAL, Uri.parse("tel:01053733201"));
            startActivity(intent);
        }
    }
    @Override
    public boolean dispatchTouchEvent(MotionEvent ev) {
        if (ev.getAction() == MotionEvent.ACTION_DOWN) {
            View v = getCurrentFocus();
            if (isShouldHideInput(v, ev)) {

                InputMethodManager imm = (InputMethodManager) getSystemService(Context.INPUT_METHOD_SERVICE);
                if (imm != null) {
                    imm.hideSoftInputFromWindow(v.getWindowToken(), 0);
                }
            }
            return super.dispatchTouchEvent(ev);
        }
        // 必不可少，否则所有的组件都不会有TouchEvent了
        if (getWindow().superDispatchTouchEvent(ev)) {
            return true;
        }
        return onTouchEvent(ev);
    }
    public  boolean isShouldHideInput(View v, MotionEvent event) {
        if (v != null && (v instanceof EditText)) {
            int[] leftTop = { 0, 0 };
            //获取输入框当前的location位置
            v.getLocationInWindow(leftTop);
            int left = leftTop[0];
            int top = leftTop[1];
            int bottom = top + v.getHeight();
            int right = left + v.getWidth();
            if (event.getX() > left && event.getX() < right
                    && event.getY() > top && event.getY() < bottom) {
                // 点击的是输入框区域，保留点击EditText的事件
                return false;
            } else {
                return true;
            }
        }
        return false;
    }

    public void getCode(String phone) {

        mBt_get_security_code.setEnabled(false);
        mBt_get_security_code.setBackgroundResource(R.mipmap.security_code_bg);
        mBt_get_security_code.setTextColor(getResources().getColor(R.color.gray_text));
        mBt_get_security_code.setText(mResidueSecond + getString(R.string.second)+"重新获取");
        postRunnable(mRunnable, 1000);

    }

    public void onRecovery() {
        mBt_get_security_code.setText(getString(R.string.get_code_again));

        mBt_get_security_code.setBackgroundResource(R.mipmap.security_code_bg_select);
        mBt_get_security_code.setTextColor(getResources().getColor(R.color.white));
        mResidueSecond = 120;
        mBt_get_security_code.setEnabled(true);
    }
    private void getVerification(final String phone) {
        Map<String, Object> objectMap = new HashMap<>();
        try {
            objectMap.put("mobile", phone);
            objectMap.put("type", "2");
        } catch (Exception e) {
            e.printStackTrace();
        }
        YJStudentReqManager.getServerData(YJReqURLProtocol.GET_VERIFICATION_CODE, objectMap, false, new TextHttpResponseHandler() {
                    @Override
                    public void onFailure(int i, Header[] headers, String s, Throwable throwable) {
                        Log.d(TAG, "失败=" + s);
                        showToast("发送失败");
                    }

                    @Override
                    public void onSuccess(int i, Header[] headers, String s) {
                        try {
                            JSONObject json = null;
                            json = new JSONObject(s);
                            Log.d(TAG, "成功s=" + s);
                            switch (json.getInt("code")) {
                                case 200:
                                    getCode(phone);
                                    showToast("验证码已发送");


                                    break;
                                case 300:
                                    //  CustomToast.makeText(getContext(), "参数不合法", Toast.LENGTH_SHORT).show();
                                    break;
                                case 301:
                                    CustomToast.makeText(getContext(), "验证码不合法", Toast.LENGTH_SHORT).show();
                                    break;
                                case 302:

                                    break;
                                case 403:
                                    CustomToast.makeText(getContext(), "用户已存在", Toast.LENGTH_SHORT).show();
                                    break;
                                case 500:
                                    CustomToast.makeText(getContext(), "服务器异常", Toast.LENGTH_SHORT).show();
                                    break;
                                default:
                                    break;
                            }
                        } catch (JSONException e) {
                            e.printStackTrace();
                        }
                    }
                });
    }

    protected abstract void register(String phone, String password,String mScurity);
}
