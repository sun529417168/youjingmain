package com.youjing.yjeducation.ui.dispaly.activity;

import android.annotation.TargetApi;
import android.app.Activity;
import android.app.Dialog;
import android.content.Context;
import android.content.Intent;
import android.os.Build;
import android.preference.PreferenceManager;
import android.support.annotation.NonNull;
import android.text.TextUtils;
import android.util.Log;
import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.BaseExpandableListAdapter;
import android.widget.ExpandableListView;
import android.widget.ImageView;
import android.widget.TextView;

import com.alibaba.fastjson.JSON;
import com.loopj.android.http.RequestParams;
import com.loopj.android.http.TextHttpResponseHandler;
import com.tencent.connect.common.Constants;
import com.tencent.tauth.IUiListener;
import com.tencent.tauth.Tencent;
import com.tencent.tauth.UiError;
import com.youjing.yjeducation.R;
import com.youjing.yjeducation.core.YJBaseActivity;
import com.youjing.yjeducation.core.YJGlobal;
import com.youjing.yjeducation.core.YJNotifyTag;
import com.youjing.yjeducation.core.YJReqURLProtocol;
import com.youjing.yjeducation.core.YJStudentReqManager;
import com.youjing.yjeducation.core.YJTitleLayoutController;
import com.youjing.yjeducation.model.YJCourseListModel;
import com.youjing.yjeducation.model.YJMedalModel;
import com.youjing.yjeducation.model.YJTaskModel;
import com.youjing.yjeducation.model.YJTaskRewardModel;
import com.youjing.yjeducation.model.YJTaskTypeModel;
import com.youjing.yjeducation.ui.actualize.activity.YJCourseListlActivity;
import com.youjing.yjeducation.ui.actualize.activity.YJLoginActivity;
import com.youjing.yjeducation.ui.actualize.activity.YJMainActivity;
import com.youjing.yjeducation.ui.actualize.activity.YJMyTaskActivity;
import com.youjing.yjeducation.ui.actualize.activity.YJRechargeWhaleMoney;
import com.youjing.yjeducation.ui.actualize.activity.YJUserInfoActivity;
import com.youjing.yjeducation.ui.actualize.dialog.YJShareDialog;
import com.youjing.yjeducation.util.ClickUtil;
import com.youjing.yjeducation.util.DialogUtil;
import com.youjing.yjeducation.util.MakeSign;

import org.apache.http.Header;
import org.json.JSONException;
import org.json.JSONObject;
import org.vwork.mobile.ui.delegate.IVClickDelegate;
import org.vwork.mobile.ui.utils.VLayoutTag;
import org.vwork.mobile.ui.utils.VViewTag;
import org.vwork.utils.base.VParamKey;
import org.vwork.utils.notification.IVNotificationListener;
import org.w3c.dom.Text;

import java.util.HashMap;
import java.util.List;
import java.util.Map;

import static com.youjing.yjeducation.R.color.black;

/**
 * user  秦伟宁
 * Date 2016/4/12
 * Time 21:00
 */
@VLayoutTag(R.layout.activity_my_task_list)
public class AYJMyTaskActivity extends YJBaseActivity implements IVClickDelegate {
    @VViewTag(R.id.expandableListView)
    private ExpandableListView expandableListView;
    protected Dialog dialogInfo;


    private ExpandableListViewaAdapter expandableListViewaAdapter;
    public static final VParamKey<List<YJTaskTypeModel>> YJ_TASK_TYPE_MODEL = new VParamKey<List<YJTaskTypeModel>>(null);

    protected List<YJTaskTypeModel> yjTaskTypeModelList;
    private String TAG = "AYJMyTaskActivity";
    private IUiListener qqShareListener;

    @Override
    protected void onLoadedView() {
        YJTitleLayoutController.initTitleBuleBg(this, "任务中心", true);
        yjTaskTypeModelList = getTransmitData(YJ_TASK_TYPE_MODEL);

        if (yjTaskTypeModelList != null) {
            Log.d(TAG, "yjTaskTypeModelList=" + yjTaskTypeModelList.toString());
        }

        if (expandableListViewaAdapter == null) {
            expandableListViewaAdapter = new ExpandableListViewaAdapter(this, this);
            expandableListView.setAdapter(expandableListViewaAdapter);
        } else {
            expandableListViewaAdapter.notifyDataSetChanged();
        }
        expandableListView.setGroupIndicator(null);
        if (yjTaskTypeModelList != null) {
            for (int i = 0; i < yjTaskTypeModelList.size(); i++) {
                expandableListView.expandGroup(i);
            }
        }


        qqShareListener = new IUiListener() {
            @Override
            public void onCancel() {
                notifyListener(YJNotifyTag.SHARE_SUCESS_INFO, "fail");
                showToast("分享取消");
            }

            @Override
            public void onComplete(Object response) {
                notifyListener(YJNotifyTag.SHARE_SUCESS_INFO, "sucess");
               // showToast(getString(R.string.share_success));
            }

            @Override
            public void onError(UiError e) {
                notifyListener(YJNotifyTag.SHARE_SUCESS_INFO, "fail");
                showToast(getString(R.string.share_fail));
            }
        };
        bindNotifyListener();
    }

    private void bindNotifyListener() {
        addListener(YJNotifyTag.MY_TASK_SUCESS, new IVNotificationListener() {
            @Override
            public void onNotify(String s, Object value) {
                getMyTask();
            }
        });


    }


    @Override
    protected void onActivityResult(int requestCode, int resultCode, Intent data) {
        if (requestCode == Constants.REQUEST_QQ_SHARE) {
            if (resultCode == Constants.ACTIVITY_OK) {
                Tencent.onActivityResultData(requestCode, resultCode, data, qqShareListener);
            }
        }
    }


    @Override
    public void onClick(View view) {

    }

    private LayoutInflater mInflater;

    class ExpandableListViewaAdapter extends BaseExpandableListAdapter {
        Activity activity;

        public ExpandableListViewaAdapter(Activity a, Context context) {
            mInflater = LayoutInflater.from(context);
            activity = a;
        }

        /*-----------------Child */
        @Override
        public Object getChild(int groupPosition, int childPosition) {
            return getChild(groupPosition, childPosition);
        }

        @Override
        public long getChildId(int groupPosition, int childPosition) {
            return childPosition;
        }

        @TargetApi(Build.VERSION_CODES.JELLY_BEAN)
        @Override
        public View getChildView(final int groupPosition, final int childPosition, boolean isLastChild, View convertView, ViewGroup parent) {

            ViewHolder viewHolder;
            if (convertView == null) {
                viewHolder = new ViewHolder();
                convertView = mInflater.inflate(R.layout.activity_task_item, null);
                viewHolder.txt_task_title = (TextView) convertView.findViewById(R.id.txt_task_title);
                viewHolder.txt_task_status = (TextView) convertView.findViewById(R.id.txt_task_status);
                viewHolder.txt_whale_money_num = (TextView) convertView.findViewById(R.id.txt_whale_money_num);


                convertView.setTag(viewHolder);
            } else {
                viewHolder = (ViewHolder) convertView.getTag();
            }
            if (yjTaskTypeModelList != null) {
                YJTaskModel yjTaskModel = yjTaskTypeModelList.get(groupPosition).getTaskVoList().get(childPosition);
                viewHolder.txt_task_title.setText(yjTaskModel.getTaskName());
                viewHolder.txt_whale_money_num.setText("+" + yjTaskModel.getGiveXNB());


                if (yjTaskModel.getCustomerTaskStatus().equals("Ing") || TextUtils.isEmpty(yjTaskModel.getCustomerTaskStatus())) {
//                    viewHolder.txt_task_status.setText("做任务");
                    if (Integer.parseInt(yjTaskModel.getAllPoint()) > 1) {
                        viewHolder.txt_task_status.setText(yjTaskModel.getHaveFinishPoint() + "/" + yjTaskModel.getAllPoint());
                        viewHolder.txt_task_status.setTextColor(getResources().getColor(R.color.black));
                        viewHolder.txt_task_status.setTextSize(12);
                        if (Build.VERSION.SDK_INT >= 16) {
                            viewHolder.txt_task_status.setBackground(null);
                        } else {
                            viewHolder.txt_task_status.setBackgroundColor(getResources().getColor(R.color.white));
                        }
                    } else if (Integer.parseInt(yjTaskModel.getAllPoint()) <= 1) {
                        viewHolder.txt_task_status.setText("做任务");
                        viewHolder.txt_task_status.setTextSize(9);
                        viewHolder.txt_task_status.setTextColor(getResources().getColor(R.color.white));
                        viewHolder.txt_task_status.setBackgroundResource(R.mipmap.img_task_blue_bg);
                    }
//                    viewHolder.txt_task_status.setBackground(getResources().getDrawable(R.mipmap.img_task_blue_bg));
                    viewHolder.txt_task_status.setOnClickListener(new View.OnClickListener() {
                        @Override
                        public void onClick(View view) {
                            intentTaskPage(yjTaskTypeModelList.get(groupPosition).getTaskVoList().get(childPosition).getTaskObjectivePage());
                        }
                    });

                } else if (yjTaskModel.getCustomerTaskStatus().equals("Over")) {
//                    viewHolder.txt_task_status.setText("领取");
                    if ("Yes".equals(yjTaskModel.getIsDoleReward())) {
                        viewHolder.txt_task_status.setText("已完成");
                        viewHolder.txt_task_status.setTextSize(9);
                        viewHolder.txt_task_status.setTextColor(getResources().getColor(R.color.white));
                        viewHolder.txt_task_status.setBackgroundResource(R.mipmap.img_task_gray_bg);
                    } else if ("No".equals(yjTaskModel.getIsDoleReward())) {
                        viewHolder.txt_task_status.setText("领取");
                        viewHolder.txt_task_status.setTextSize(9);
                        viewHolder.txt_task_status.setTextColor(getResources().getColor(R.color.white));
                        viewHolder.txt_task_status.setBackgroundResource(R.mipmap.img_task_yellow_bg);
                    }
//                    viewHolder.txt_task_status.setBackground(getResources().getDrawable(R.mipmap.img_task_yellow_bg));

                    if (yjTaskTypeModelList.get(groupPosition).getTaskTypeName().equals("新手任务")) {
                        viewHolder.txt_task_status.setOnClickListener(new View.OnClickListener() {
                            @Override
                            public void onClick(View view) {
                                Log.i("新手任务==", yjTaskTypeModelList.get(groupPosition).getTaskVoList().get(childPosition).getTaskId());
                                getTaskReward(yjTaskTypeModelList.get(groupPosition).getTaskVoList().get(childPosition).getTaskId());
                            }
                        });
                    } else if (yjTaskTypeModelList.get(groupPosition).getTaskTypeName().equals("日常任务")) {
                        viewHolder.txt_task_status.setOnClickListener(new View.OnClickListener() {
                            @Override
                            public void onClick(View view) {
                                Log.i("日常任务==", yjTaskTypeModelList.get(groupPosition).getTaskVoList().get(childPosition).getTaskId());
                                getTaskReward(yjTaskTypeModelList.get(groupPosition).getTaskVoList().get(childPosition).getTaskId());
                            }
                        });
                    } else if (yjTaskTypeModelList.get(groupPosition).getTaskTypeName().equals("全局任务")) {
                        viewHolder.txt_task_status.setOnClickListener(new View.OnClickListener() {
                            @Override
                            public void onClick(View view) {
                                Log.i("全局任务==", yjTaskTypeModelList.get(groupPosition).getTaskVoList().get(childPosition).getTaskId());
                                getTaskReward(yjTaskTypeModelList.get(groupPosition).getTaskVoList().get(childPosition).getTaskId());
                            }
                        });
                    }
                }
            }

            return convertView;
        }


        @Override
        public int getChildrenCount(int groupPosition) {
            if (yjTaskTypeModelList != null) {
                return yjTaskTypeModelList.get(groupPosition).getTaskVoList().size();
            } else {
                return 0;
            }

        }

        /* ----------------------------Group */
        @Override
        public Object getGroup(int groupPosition) {
            return getGroup(groupPosition);
        }

        @Override
        public int getGroupCount() {
            if (yjTaskTypeModelList != null) {
                return yjTaskTypeModelList.size();
            } else {
                return 0;
            }
        }

        @Override
        public long getGroupId(int groupPosition) {
            return groupPosition;
        }

        @Override
        public View getGroupView(final int groupPosition, boolean isExpanded, View convertView, ViewGroup parent) {

            final ViewHolderHead holder;
            if (convertView == null) {
                holder = new ViewHolderHead();
                convertView = mInflater.inflate(R.layout.activity_task_group_item, null);
                holder.txt_name = (TextView) convertView.findViewById(R.id.txt_name);
                holder.img_task = (ImageView) convertView.findViewById(R.id.img_task);
                convertView.setTag(holder);
            } else {
                holder = (ViewHolderHead) convertView.getTag();
            }
            if (yjTaskTypeModelList != null) {
                holder.txt_name.setText(yjTaskTypeModelList.get(groupPosition).getTaskTypeName());
                if (yjTaskTypeModelList.get(groupPosition).getTaskType().equals("NoviceTask")) {
                    holder.img_task.setImageResource(R.mipmap.img_new_task);
                } else {
                    holder.img_task.setImageResource(R.mipmap.img_every_task);
                }
            }
            convertView.setOnClickListener(new View.OnClickListener() {
                @Override
                public void onClick(View view) {
                    return;
                }
            });
            return convertView;
        }

        @Override
        public boolean hasStableIds() {
            return false;
        }

        @Override
        public boolean isChildSelectable(int groupPosition, int childPosition) {
            return true;
        }

        class ViewHolder {
            private TextView txt_task_title;
            private TextView txt_task_status;
            private TextView txt_whale_money_num;
        }

        /*存放控件*/
        public final class ViewHolderHead {
            public TextView txt_name;
            public ImageView img_task;
        }

    }

    public void intentTaskPage(String taskPage) {
        switch (taskPage) {
            case "No_Page":
                break;
            case "Current_Page"://当前页面
//                    startActivity(AYJMyTaskActivity.class);
                YJShareDialog yjShareDialog = new YJShareDialog();
                showDialog(yjShareDialog);
                break;
            case "Index_Page"://首页
//                    startActivity(AYJMainActivity.class);
                //  startActivity(createIntent(YJMainActivity.class, createTransmitData(YJMainActivity.MAIN_POSITION, "0")));
                notifyListener(YJNotifyTag.MAIN_LESSON, 0);
                finish();
                break;
            case "Answer_Page"://提问频道
//                    startActivity(AYJMainActivity.class);
//                    startActivity(createIntent(YJMainActivity.class, createTransmitData(YJMainActivity.MAIN_POSITION, "1")));
                notifyListener(YJNotifyTag.MAIN_QUESTION, 1);
                finish();
                break;
            case "PayGoid_Page"://充值页面
                startActivity(YJRechargeWhaleMoney.class);
                finish();
                break;
            case "CustomerInfo_Page"://个人信息编辑页面
                startActivity(YJUserInfoActivity.class);
                finish();
                break;
        }
    }

    public void getMyTask() {
        YJStudentReqManager.getServerData(YJReqURLProtocol.GET_MY_TASK, null, true, new TextHttpResponseHandler() {
            @Override
            public void onFailure(int i, Header[] headers, String s, Throwable throwable) {
                Log.d(TAG, "失败=" + s);
                showToast(getString(R.string.no_net_work));
            }

            @Override
            public void onSuccess(int i, Header[] headers, String s) {
                try {
                    Log.d(TAG, "成功s=" + s);
                    JSONObject json = null;
                    json = new JSONObject(s);
                    switch (json.getInt("code")) {
                        case 200:
                            JSONObject jsonData = new JSONObject(json.getString("data"));
                            yjTaskTypeModelList = JSON.parseArray(jsonData.getString("taskTypeVoList"), YJTaskTypeModel.class);
                            if (expandableListViewaAdapter == null) {
                                expandableListViewaAdapter = new ExpandableListViewaAdapter(AYJMyTaskActivity.this, AYJMyTaskActivity.this);
                                expandableListView.setAdapter(expandableListViewaAdapter);
                            } else {
                                expandableListViewaAdapter.notifyDataSetChanged();
                            }
                            Log.d(TAG, "yjTaskTypeModelList=" + yjTaskTypeModelList.toString());
                            Log.i("分享成功后返回的数据=====", yjTaskTypeModelList.toString());

                            break;
                        case 300:
                            break;
                        case 400:
                            break;
                        case 401:
                            break;
                        case 402:
                            break;
                        case 500:
                            break;
                        case 600:
                            startActivity(createIntent(YJLoginActivity.class, createTransmitData(YJLoginActivity.LOGIN_OUT, 1).set(YJLoginActivity.MY_LOGIN_OUT, true)));
                            finishAll();
                            break;
                        default:
                            break;
                    }
                } catch (JSONException e) {
                    e.printStackTrace();
                }
            }
        });
    }

    /**
     * stt
     * 时间:2016.5.14
     * 方法说明：领取任务
     */
    public void getTaskReward(String taskId) {
        Map<String, Object> objectMap = new HashMap<>();
        try {
            objectMap.put("taskId", taskId);
        } catch (Exception e) {
            e.printStackTrace();
        }
        YJStudentReqManager.getServerData(YJReqURLProtocol.GET_TASK_REWARD, objectMap, true, new TextHttpResponseHandler() {
            @Override
            public void onFailure(int i, Header[] headers, String s, Throwable throwable) {
                Log.d(TAG, "失败=" + s);
                showToast(getString(R.string.no_net_work));
//                mMsgListView.stopRefresh();
            }

            @Override
            public void onSuccess(int i, Header[] headers, String s) {
                try {
                    Log.d(TAG, "成功s=" + s);
                    JSONObject json = null;
                    json = new JSONObject(s);
                    switch (json.getInt("code")) {
                        case 200:
                            JSONObject jsonData = new JSONObject(json.getString("data"));
                            YJTaskRewardModel yjTaskRewardModel = JSON.parseObject(jsonData.toString(), YJTaskRewardModel.class);
//                                Log.d("领取成功===", yjTaskRewardModel.toString());
//                            YJGlobal.setYjOpenClassModelList(mYJMedalModelList);
                            dialogInfo = DialogUtil.showTaskDialog(getContext(), yjTaskRewardModel.getRewardCoin(), yjTaskRewardModel.getRewardExp());
                            getMyTask();
                            break;
                        case 300:
                            break;
                        case 400:
                            break;
                        case 401:
                            break;
                        case 402:
                            break;
                        case 500:
                            break;
                        case 600:
                            startActivity(createIntent(YJLoginActivity.class, createTransmitData(YJLoginActivity.LOGIN_OUT, 1).set(YJLoginActivity.MY_LOGIN_OUT, true)));
                            finishAll();
                            break;
                        default:
                            break;
                    }

                } catch (JSONException e) {
                    e.printStackTrace();
                }
            }
        });
    }

}
