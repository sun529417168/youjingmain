package com.youjing.yjeducation.ui.dispaly.activity;

import android.content.Context;
import android.content.SharedPreferences;
import android.preference.PreferenceManager;
import android.text.Editable;
import android.text.TextUtils;
import android.text.TextWatcher;
import android.util.Log;
import android.view.KeyEvent;
import android.view.MotionEvent;
import android.view.View;
import android.view.inputmethod.InputMethodManager;
import android.widget.Button;
import android.widget.EditText;
import android.widget.RelativeLayout;
import android.widget.TextView;
import android.widget.Toast;

import com.alibaba.sdk.android.AlibabaSDK;
import com.alibaba.sdk.android.push.CloudPushService;
import com.youjing.yjeducation.R;
import com.youjing.yjeducation.component.ActivityBox;
import com.youjing.yjeducation.core.YJBaseActivity;
import com.youjing.yjeducation.core.YJGlobal;
import com.youjing.yjeducation.dao.MessageDao;
import com.youjing.yjeducation.ui.actualize.activity.YJActivateGiftCard;
import com.youjing.yjeducation.ui.actualize.activity.YJForgetPasswordActivity;
import com.youjing.yjeducation.ui.actualize.activity.YJMainActivity;
import com.youjing.yjeducation.ui.actualize.activity.YJRegisterActivity;
import com.youjing.yjeducation.ui.actualize.dialog.YJClearCacheDialog;
import com.youjing.yjeducation.ui.dispaly.dialog.TextDeviceDialog;
import com.youjing.yjeducation.util.ClickUtil;
import com.youjing.yjeducation.util.SharedUtil;
import com.youjing.yjeducation.util.YJStringWhiteSpaceUtil;
import com.youjing.yjeducation.wiget.CustomToast;

import org.vwork.mobile.ui.delegate.IVClickDelegate;
import org.vwork.mobile.ui.utils.VLayoutTag;
import org.vwork.mobile.ui.utils.VViewTag;
import org.vwork.utils.base.VParamKey;
import org.vwork.utils.base.VStringUtil;

/**
 * user  秦伟宁
 * Date 2016/3/17
 * Time 19:31
 */
@VLayoutTag(R.layout.login)
public abstract class AYJLoginActivity extends YJBaseActivity implements IVClickDelegate {
    @VViewTag(R.id.txt_gift_card)
    private TextView mTxt_gift_card;
    @VViewTag(R.id.txt_register)
    private TextView mTxt_register;
    @VViewTag(R.id.txt_forget_password)
    private TextView mTxt_forget_password;
    @VViewTag(R.id.txt_wechat_login)
    private TextView mTxt_wechat_login;
    @VViewTag(R.id.txt_qq_login)
    private TextView mTxt_qq_login;
    @VViewTag(R.id.txt_sina_login)
    private TextView mTxt_sina_login;
    @VViewTag(R.id.edt_account)
    private EditText mEdt_account;
    @VViewTag(R.id.edt_password)
    private EditText mEdt_password;

    @VViewTag(R.id.btn_login)
    private Button mBtn_login;
    @VViewTag(R.id.rl_back)
    private RelativeLayout rl_back;

    protected int mloginOut = -1;
    public static final VParamKey<Integer> LOGIN_OUT = new VParamKey<Integer>(null);
    public static final VParamKey<Boolean> MY_LOGIN_OUT = new VParamKey<Boolean>(null);
    public static final VParamKey<String> REGIST_INFO = new VParamKey<String>(null);
    protected String mRegistInfo = "";

    private boolean myLoginOut = false;

    @Override
    protected void onLoadedView() {
        mloginOut = getTransmitData(LOGIN_OUT);
        mRegistInfo = getTransmitData(REGIST_INFO);
        myLoginOut = getTransmitData(MY_LOGIN_OUT);
        mEdt_account.addTextChangedListener(new TextWatcher() {
            @Override
            public void beforeTextChanged(CharSequence charSequence, int i, int i1, int i2) {

            }

            @Override
            public void onTextChanged(CharSequence charSequence, int i, int i1, int i2) {
                if (charSequence.length() > 0 && !TextUtils.isEmpty(mEdt_password.getText())) {
                    mBtn_login.setTextColor(getResources().getColor(R.color.white));
                } else {
                    mBtn_login.setTextColor(getResources().getColor(R.color.light_white));
                }
            }

            @Override
            public void afterTextChanged(Editable editable) {

            }
        });
        mEdt_password.addTextChangedListener(new TextWatcher() {
            @Override
            public void beforeTextChanged(CharSequence charSequence, int i, int i1, int i2) {
            }

            @Override
            public void onTextChanged(CharSequence charSequence, int i, int i1, int i2) {
                if (charSequence.length() > 0 && !TextUtils.isEmpty(mEdt_account.getText())) {
                    mBtn_login.setTextColor(getResources().getColor(R.color.white));
                } else {
                    mBtn_login.setTextColor(getResources().getColor(R.color.light_white));
                }
            }

            @Override
            public void afterTextChanged(Editable editable) {

            }
        });

        if (myLoginOut) {
            showToast("用户已在其他设备登录");
            logOut();
        }

    }


    @Override
    public boolean dispatchTouchEvent(MotionEvent ev) {
        if (ev.getAction() == MotionEvent.ACTION_DOWN) {
            View v = getCurrentFocus();
            if (isShouldHideInput(v, ev)) {

                InputMethodManager imm = (InputMethodManager) getSystemService(Context.INPUT_METHOD_SERVICE);
                if (imm != null) {
                    imm.hideSoftInputFromWindow(v.getWindowToken(), 0);
                }
            }
            return super.dispatchTouchEvent(ev);
        }
        // 必不可少，否则所有的组件都不会有TouchEvent了
        if (getWindow().superDispatchTouchEvent(ev)) {
            return true;
        }
        return onTouchEvent(ev);
    }

    public boolean isShouldHideInput(View v, MotionEvent event) {
        if (v != null && (v instanceof EditText)) {
            int[] leftTop = {0, 0};
            //获取输入框当前的location位置
            v.getLocationInWindow(leftTop);
            int left = leftTop[0];
            int top = leftTop[1];
            int bottom = top + v.getHeight();
            int right = left + v.getWidth();
            if (event.getX() > left && event.getX() < right
                    && event.getY() > top && event.getY() < bottom) {
                // 点击的是输入框区域，保留点击EditText的事件
                return false;
            } else {
                return true;
            }
        }
        return false;
    }


    @Override
    public void onClick(View view) {
        if (view == mTxt_register) {
            if (ClickUtil.isFastDoubleClick()) {
                return;
            }
//            CustomToast.makeText(getContext(),"哈哈哈错误信息", Toast.LENGTH_LONG).show();
            startActivity(createIntent(YJRegisterActivity.class, createTransmitData(YJRegisterActivity.LOGIN_FLAG, false).set(YJRegisterActivity.REGIST_INFO, mRegistInfo)));
        } else if (view == mTxt_gift_card) {
            startActivity(YJActivateGiftCard.class);
        } else if (view == mBtn_login) {
            String phone = mEdt_account.getText().toString().trim();
            String password = mEdt_password.getText().toString().trim();
            if (ClickUtil.isFastDoubleClick()) {
                return;
            }
            if (VStringUtil.isNullOrEmpty(phone)) {
                CustomToast.makeText(getContext(), getString(R.string.txt_phone_number), Toast.LENGTH_SHORT).show();
                return;
            }
            if (VStringUtil.isNullOrEmpty(password)) {
                CustomToast.makeText(getContext(), getString(R.string.txt_login_password), Toast.LENGTH_SHORT).show();
                return;
            }
            char[] cTemp = password.toCharArray();
            char endChar = cTemp[cTemp.length - 1];
            if (YJStringWhiteSpaceUtil.checkIsWhiteSpace(endChar)) {
                CustomToast.makeText(getContext(), getString(R.string.n_password_have_space_input_again), Toast.LENGTH_SHORT).show();
                return;
            }
            login(phone, password);

        } else if (view == mTxt_forget_password) {
            if (ClickUtil.isFastDoubleClick()) {
                return;
            }
            startActivity(YJForgetPasswordActivity.class);
        } else if (view == mTxt_wechat_login) {

        } else if (view == mTxt_sina_login) {

        } else if (view == mTxt_qq_login) {

        } else if (view == rl_back) {
            if (ClickUtil.isFastDoubleClick()) {
                return;
            }
            if (mloginOut == 1) {
                startActivity(YJMainActivity.class);
                finish();
            } else if (mloginOut == 2) {
                finishAll();
            } else {
                finish();
            }
        }
    }

    @Override
    protected boolean onBackKeyClick() {



        if (mloginOut == 1) {
            startActivity(YJMainActivity.class);
            finish();
            return true;
        } else if (mloginOut == 2) {
            finishAll();
            return true;
        } else {
            finish();
        }
        return super.onBackKeyClick();
    }


    protected abstract void login(String phone, String password);

    private void logOut() {
        SharedPreferences sharedPreferences = PreferenceManager.getDefaultSharedPreferences(getContext());
        SharedPreferences.Editor editor = sharedPreferences.edit();
        editor.putBoolean("isLogin", false);
        // editor.putString("phone", "");
        // editor.putString("password", "");

        editor.commit();
    }
}
