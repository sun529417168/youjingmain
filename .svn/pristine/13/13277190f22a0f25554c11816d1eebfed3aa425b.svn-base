package com.youjing.yjeducation.ui.dispaly.activity;

import android.content.Intent;
import android.graphics.Color;
import android.text.Layout;
import android.text.TextUtils;
import android.view.KeyEvent;
import android.view.View;
import android.widget.AdapterView;
import android.widget.ImageView;
import android.widget.LinearLayout;
import android.widget.ListView;
import android.widget.ProgressBar;
import android.widget.RelativeLayout;
import android.widget.TextView;

import com.lidroid.xutils.BitmapUtils;
import com.tencent.connect.common.Constants;
import com.tencent.tauth.IUiListener;
import com.tencent.tauth.Tencent;
import com.tencent.tauth.UiError;
import com.youjing.yjeducation.R;
import com.youjing.yjeducation.common.config.YJConfig;
import com.youjing.yjeducation.core.YJBaseActivity;
import com.youjing.yjeducation.core.YJNotifyTag;
import com.youjing.yjeducation.core.YJTitleLayoutController;
import com.youjing.yjeducation.model.YJMyCourseModel;
import com.youjing.yjeducation.ui.actualize.dialog.YJShareDialog;
import com.youjing.yjeducation.util.ClickUtil;
import com.youjing.yjeducation.util.StringUtils;
import com.youjing.yjeducation.util.TimeUtil;

import org.vwork.mobile.ui.AVAdapterItem;
import org.vwork.mobile.ui.adapter.VAdapter;
import org.vwork.mobile.ui.delegate.IVAdapterDelegate;
import org.vwork.mobile.ui.delegate.IVClickDelegate;
import org.vwork.mobile.ui.utils.VLayoutTag;
import org.vwork.mobile.ui.utils.VViewTag;
import org.vwork.utils.base.VParamKey;
import org.w3c.dom.Text;

import java.util.List;

/**
 * user  秦伟宁
 * Date 2016/4/12
 * Time 21:00
 */
@VLayoutTag(R.layout.activity_my_course)
public abstract class AYJMyCourseActivity extends YJBaseActivity implements IVClickDelegate, IVAdapterDelegate {
    @VViewTag(R.id.lv_my_course)
    private ListView mLv_my_course;

    private String TAG = "YJMyCourseActivity";

    private VAdapter mVAdapter;

    private List<YJMyCourseModel> yjCourseModelList;
    public static final VParamKey<List<YJMyCourseModel>> YJ_COURSE_MODEL_LIST = new VParamKey<List<YJMyCourseModel>>(null);
    private IUiListener qqShareListener;

    @Override
    protected void onLoadedView() {
        YJTitleLayoutController.initTitleBuleBg(this, "我的课程", true);
        yjCourseModelList = getTransmitData(YJ_COURSE_MODEL_LIST);

        if (yjCourseModelList.size() == 0) {
            findViewById(R.id.relayout_my_course).setBackgroundColor(getResources().getColor(R.color.huise));
            mLv_my_course.setVisibility(View.GONE);
            findViewById(R.id.my_course_nothing).setVisibility(View.VISIBLE);
        } else {
            findViewById(R.id.relayout_my_course).setBackgroundColor(getResources().getColor(R.color.white));
            mLv_my_course.setVisibility(View.VISIBLE);
            findViewById(R.id.my_course_nothing).setVisibility(View.GONE);
        }

        if (mVAdapter == null) {
            mVAdapter = new VAdapter(this, mLv_my_course);
            mLv_my_course.setAdapter(mVAdapter);
        } else {
            mVAdapter.notifyDataSetChanged();
        }
        mLv_my_course.setOnItemClickListener(new AdapterView.OnItemClickListener() {
            @Override
            public void onItemClick(AdapterView<?> adapterView, View view, int i, long l) {
                if (ClickUtil.isFastDoubleClick()) {
                    return;
                }
                getCourseCatalog(yjCourseModelList.get(i).getCourseId());
            }
        });


        qqShareListener = new IUiListener() {
            @Override
            public void onCancel() {
                notifyListener(YJNotifyTag.SHARE_SUCESS_INFO, "fail");
                showToast("分享取消");
            }

            @Override
            public void onComplete(Object response) {
                notifyListener(YJNotifyTag.SHARE_SUCESS_INFO, "sucess");
                //showToast(getString(R.string.share_success));
            }

            @Override
            public void onError(UiError e) {
                notifyListener(YJNotifyTag.SHARE_SUCESS_INFO, "fail");
                showToast(getString(R.string.share_fail));
            }
        };
    }


    @Override
    protected void onActivityResult(int requestCode, int resultCode, Intent data) {
        if (requestCode == Constants.REQUEST_QQ_SHARE) {
            if (resultCode == Constants.ACTIVITY_OK) {
                Tencent.onActivityResultData(requestCode, resultCode, data, qqShareListener);
            }
        }
    }


    @Override
    public void onClick(View view) {

    }

    @Override
    public AVAdapterItem createAdapterItem(View view, int i, int i1) {
        return new YJOrderItem();
    }

    @Override
    public int getAdapterItemCount(View view) {
        if (yjCourseModelList != null) {
            return yjCourseModelList.size();
        } else {
            return 0;
        }
    }

    @VLayoutTag(R.layout.my_course_item)
    class YJOrderItem extends AVAdapterItem {
        @VViewTag(R.id.txt_name)
        private TextView mTxt_name;
        @VViewTag(R.id.txt_teacher_name)
        private TextView mTxt_teacher_name;
        @VViewTag(R.id.txt_learn_info)
        private TextView mTxt_learn_info;
        @VViewTag(R.id.ll_learn_over)
        private LinearLayout mLl_learn_over;
        @VViewTag(R.id.txt_learn_statue)
        private TextView mTxt_learn_statue;
        @VViewTag(R.id.view_line)
        private View mView_line;
        @VViewTag(R.id.view_line_background)
        private ProgressBar mView_line_background;
        @VViewTag(R.id.img_course_teacher)
        private ImageView mImg_course_teacher;
        @VViewTag(R.id.img_learn_share)
        private ImageView mImg_learn_share;
        @VViewTag(R.id.my_course_item_lookAllTime)
        private TextView mMy_course_item_lookAllTime;
        @VViewTag(R.id.my_course_item_lookCount)
        private TextView mMy_course_item_lookCount;
        @VViewTag(R.id.my_course_item_courseRanking)
        private TextView mMy_course_item_courseRanking;
        @VViewTag(R.id.my_course_item_share_text)
        private TextView mMy_course_item_share_text;

        private int bgWidth;

        @Override
        public void update(int position) {
            super.update(position);

//            bgWidth = mView_line_background.getMeasuredWidth();// 北京空间长度

            if (yjCourseModelList != null) {
                mTxt_name.setText(yjCourseModelList.get(position).getName());
                mTxt_teacher_name.setText(yjCourseModelList.get(position).getTrueName());
                mView_line_background.setProgress(TextUtils.isEmpty(yjCourseModelList.get(position).getStudyScheduler()) || "0".equals(yjCourseModelList.get(position).getStudyScheduler()) ? 0 : Integer.parseInt(yjCourseModelList.get(position).getStudyScheduler()));
                if (!TextUtils.isEmpty(yjCourseModelList.get(position).getCoursePic())) {
                    BitmapUtils.create(getContext()).display(mImg_course_teacher, yjCourseModelList.get(position).getCoursePic());
                } else {
                    mImg_course_teacher.setImageResource(R.mipmap.img_no_data_bg);
                }
                // 课程剩余时间
                int restTime = TimeUtil.compareTime(TimeUtil.getCurrentTime(), yjCourseModelList.get(position).getEndDate());
                if (yjCourseModelList.get(position).getCourseServiceStatus().equals("OVER")) {
                    mTxt_learn_info.setText("课程服务已结束");
                } else {
                    if (restTime > 0) {
                        mTxt_learn_info.setText(yjCourseModelList.get(position).getEndDate() + "之前学完\t\t还有[" + restTime + "]天");
                    } else {
                        mTxt_learn_info.setText("课程服务已结束");
                    }
                }


                //上次学习课程时间
                int learnTime = Integer.parseInt(yjCourseModelList.get(position).getLastStudyTime());

                int yellow = Color.parseColor("#ff9f19");
                int bule = Color.parseColor("#99ccff");
                if (yjCourseModelList.get(position).getStudyStatus().equals("Study_Over")) {//学完
                    mLl_learn_over.setVisibility(View.VISIBLE);
                    mTxt_learn_statue.setText("学习完成");
                    mView_line.setBackgroundColor(yellow);
                    mMy_course_item_lookAllTime.setText("0".equals(yjCourseModelList.get(position).getLookAllTime()) ? "0" : StringUtils.getMinute(yjCourseModelList.get(position).getLookAllTime()));
                    mMy_course_item_lookCount.setText(yjCourseModelList.get(position).getLookCount());
                    if (TextUtils.isEmpty(yjCourseModelList.get(position).getCourseRanking()) || "0".equals(yjCourseModelList.get(position).getCourseRanking())) {
                        mMy_course_item_courseRanking.setText("暂无");
                        mMy_course_item_courseRanking.setTextSize(17);
                    } else {
                        mMy_course_item_courseRanking.setText(yjCourseModelList.get(position).getCourseRanking());
                    }
                    changeWidth(mView_line, 1, 1.0);
                } else if (yjCourseModelList.get(position).getStudyStatus().equals("Study_Ing")) {//学习中
                    mTxt_learn_statue.setText("上次观看到 第" + yjCourseModelList.get(position).getLastNumber() + "节 " + TimeUtil.displayDuration(learnTime).replace(":", "'") + "\"");
                    mLl_learn_over.setVisibility(View.GONE);
                    mView_line.setBackgroundColor(bule);
                    changeWidth(mView_line, Integer.parseInt(yjCourseModelList.get(position).getStudyScheduler()), 100.0);
                } else if (yjCourseModelList.get(position).getStudyStatus().equals("Study_No")) {//没开始学
                    mLl_learn_over.setVisibility(View.GONE);
                    mView_line.setBackgroundColor(bule);
                    changeWidth(mView_line, 0, 1.0);
                    mTxt_learn_statue.setText("尚未开始学习");
                }

            } else {

            }
            mImg_learn_share.setOnClickListener(new View.OnClickListener() {
                @Override
                public void onClick(View view) {
                    YJShareDialog dialog = new YJShareDialog();
                    showDialog(dialog);
                }
            });
            mMy_course_item_share_text.setOnClickListener(new View.OnClickListener() {
                @Override
                public void onClick(View v) {
                    YJShareDialog dialog = new YJShareDialog();
                    showDialog(dialog);
                }
            });
        }

        public void changeWidth(View view, int currentCharcter, Double allCharcter) {
            RelativeLayout.LayoutParams linearParams = (RelativeLayout.LayoutParams) view.getLayoutParams();// 取控件view当前的布局参数
            Double cunter = currentCharcter / allCharcter;// 百分比
            linearParams.width = (int) (cunter * YJConfig.mScreenWidth);
            view.setLayoutParams(linearParams); // 使设置好的布局参数应用到控件view
        }
    }

    public abstract void getCourseCatalog(String courseId);


}
